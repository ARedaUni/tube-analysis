services:
  db:
    image: postgres:13
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/.env
    networks:
      - backend_network
      
  redis:
    image: redis:6
    container_name: redis
    restart: always
    networks:
      - backend_network

  backend:
    image: alireda139/backend:latest  # Use the pushed backend image
    container_name: backend
    ports:
      - "8000:8000"
    env_file: ./backend/.env
    depends_on:
      - db
      - redis
    networks:
      - backend_network
    command: gunicorn --config gunicorn.conf.py config.wsgi:application

  celery_worker:
    image: alireda139/celery_worker:latest  # Use the pushed celery worker image
    container_name: celery_worker
    env_file: ./backend/.env
    depends_on:
      - backend
      - redis
    networks:
      - backend_network
    command: celery -A config worker --loglevel=info

  frontend:
    image: alireda139/frontend:latest  # Use the pushed frontend image
    container_name: frontend
    ports:
      - "3000:3000"
    env_file: ./frontend/.env.local
    depends_on:
      - backend
    networks:
      - backend_network
    command: npm start

volumes:
  postgres_data:

networks:
  backend_network: