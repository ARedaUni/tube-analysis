services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file: ./backend/.env
    depends_on:
      - db
      - redis
    networks:
      - backend_network
    command: gunicorn --config gunicorn.conf.py config.wsgi:application

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery_worker
    volumes:
      - ./backend:/app
    env_file: ./backend/.env
    depends_on:
      - backend
      - redis
    command: celery -A config worker --loglevel=info
    networks:
      - backend_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    env_file: ./frontend/.env.local
    depends_on:
      - backend
    networks:
      - backend_network
    command: npm start

volumes:
  postgres_data:

networks:
  backend_network:
